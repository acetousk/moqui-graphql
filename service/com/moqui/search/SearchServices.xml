<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="search" noun="DataDocumentsByJson" type="script" location="component://moqui-graphql/src/main/groovy/scripts/SearchDataDocumentsByJson.groovy">
        <description>
            This service is similiar to org.moqui.search.SearchServices.search#DataDocuments, but with query json instead
        </description>
        <in-parameters>
            <parameter name="indexName" required="true"/>
            <parameter name="documentType"><description>The ElasticSearch document type. For DataDocument based docs
                this is the dataDocumentId.</description></parameter>
            <parameter name="queryJson" required="true"/>
            <parameter name="orderByFields" type="List"><parameter name="orderByField"/></parameter>
            <parameter name="pageIndex" type="Integer" default="0"/>
            <parameter name="pageSize" type="Integer" default="20"/>
            <parameter name="flattenDocument" type="Boolean" default="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="documentList" type="List">
                <description>List of documents, each document is a Map with nested Maps and Lists of Maps.</description>
                <parameter name="document" type="Map"/>
            </parameter>
            <parameter name="documentListCount" type="Integer"><description>The total count of hits, not just the
                limited number returned.</description></parameter>
            <parameter name="documentListPageIndex" type="Integer"/>
            <parameter name="documentListPageSize" type="Integer"/>
            <parameter name="documentListPageMaxIndex" type="Integer"/>
            <parameter name="documentListPageRangeLow" type="Integer"/>
            <parameter name="documentListPageRangeHigh" type="Integer"/>
        </out-parameters>
    </service>
   
</services>
